security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
#    role_hierarchy:
#        ROLE_ADMIN: [ ROLE_USER ]
#        ROLE_SUPER_ADMIN: [ ROLE_ADMIN ]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        public:
            pattern:
                - ^/auth/sign-up
            security: false
        login:
            pattern:
                - ^/auth/sign-in
            stateless: true
            json_login:
                check_path: sign_in
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        secured:
            lazy: true
            stateless: true
            jwt: ~
    access_control:
        - { path: ^/test, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/users, roles: IS_AUTHENTICATED_FULLY, methods: [DELETE, PATCH] }
        - { path: ^/users, roles: PUBLIC_ACCESS, methods: [GET] }
        - { path: ^/auth, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: PUBLIC_ACCESS }
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
